//print("-------------------");
//print("In INT 6");

//print("set phySP");
alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias filename S1;
filename=[physicalSP-3];

alias sysCallNo S2;
sysCallNo=[physicalSP-1];

alias FATphysical S3;
alias required S4;
alias presentcount S5;
alias temp S6;
alias temp2 S7;
alias MF S8;
alias physical S9;
alias PPOFTindex S10;
alias currentPID S11;
alias currentPCB S12;
alias currentphysical S13;
alias PPOFTphysical S14;
alias SWOFTphysical S15;


//Exec()
if(sysCallNo==9)then
//print("EXEC");
//print("exist?");
	FATphysical=FAT;
	while(FATphysical<FAT+512&&[FATphysical+0]!=filename)do
		FATphysical=FATphysical+8;
	endwhile;
	
	if(FATphysical>=FAT+512)then
		//print("!exist");
		[physicalSP-2]=-1;
		ireturn;
	endif;
//print("BBnew");	
	load(1,[FATphysical+2]);
//print("new");
	required=0;
	temp=SCRATCHPAD;
	while([temp]>-1&&[temp]<513&&temp<1024)do
		required=required+1;
		temp=temp+1;
	endwhile;
	if(required>3)then
		//print("big prog");
		[physicalSP-2]=-1;
		ireturn;
	endif;
//------------------------------------------------------------------------
//print("old");
	presentcount=0;
	temp=PTBR;
	while(temp<PTBR+6)do/////////////////////////////////////PTBR+6
		if([temp+1]=="01"||[temp+1]=="11")then
			presentcount=presentcount+1;
		endif;
		temp=temp+2;
	endwhile;
	temp=PTBR+4;//check from last PTBR entry
	temp2=required;
	if(presentcount>required)then
//print("o>n,MF");
		while(presentcount>required)do
			if([temp]==-1)then
				temp=temp-2;
				continue;
			endif;
			[MEM_LIST+[temp]]=0;
			[temp]=-1;
			[temp+1]="00";
			presentcount=presentcount-1;
			temp=temp-2;
		endwhile;
	else
//print("n>o");
		temp2=required-presentcount;
		MF=MEM_LIST;
		while(MF<MEM_LIST+64&&temp2!=0)do
			if([MF]==0)then
				temp2=temp2-1;
			endif;
			MF=MF+1;
		endwhile;
		if(temp2!=0)then
			//print("!MF");
			[physicalSP-2]=-1;
			ireturn;
		endif;
//print("PTBR");
		temp2=required;
		temp=PTBR;
		while([temp]!=-1&&temp<PTBR+2*PTLR)do
			temp=temp+2;
		endwhile;
		MF=MEM_LIST;				
		while(required>presentcount)do
			while([MF]!=0)do
				MF=MF+1;
			endwhile;
			[MF]=1;
			[temp]=MF%64;
			[temp+1]="01";
			temp=temp+2;
			required=required-1;
		endwhile;
	endif;
//print("load");
	required=temp2;
	temp2=0;
	while(required!=0)do
		load([PTBR+temp2*2],[SCRATCHPAD+temp2]);
		required=required-1;
		temp2=temp2+1;
	endwhile;
//--------------------------------------------------------------
//print("close");
alias SWOFTindex S2;
	PPOFTindex=0;
	currentPID = (PTBR - 1024) / 8;	
	currentPCB = READY_LIST + 32 * currentPID;
	temp=PPOFTphysical;
	while(PPOFTindex<8)do
		PPOFTphysical=currentPCB+15;
		PPOFTphysical=PPOFTphysical+2*PPOFTindex;
		SWOFTphysical=1344;
		SWOFTindex=[PPOFTphysical];
		SWOFTphysical=SWOFTphysical+2*SWOFTindex;
		[SWOFTphysical+1]=[SWOFTphysical+1]-1;
		if([SWOFTphysical+1]==0)then
			//print("file=0");
			[SWOFTphysical]=-1;
		endif;
		[PPOFTphysical]=-1;
		[PPOFTphysical+1]=-1;
		PPOFTindex=PPOFTindex+1;
	endwhile;
//print("SP");
	BP=3*512;
	SP=3*512;
//print("IP");
	physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
	[physicalSP] = 0;
endif;
//print("!EXEC");
ireturn;
